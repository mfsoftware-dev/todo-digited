generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id            String    @id @default(uuid())
  image         String?
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  projects Project[]
  tasks    Task[]
  accounts Account[]
}

model Account {
  id                String  @id @default(uuid())
  type              String
  provider          String
  providerAccountId String
  token_type        String?
  refresh_token     String?
  access_token      String?
  id_token          String?
  scope             String?
  session_state     String?
  expires_at        Int?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@unique([provider, providerAccountId])
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

model Task {
  id String @id @default(uuid())

  name        String
  priority    TaskPriority @default(LOW)
  description String?
  completed   Boolean      @default(false)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expiresAt DateTime?

  project   Project? @relation(fields: [projectId], references: [id])
  projectId String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Project {
  id String @id @default(uuid())

  name        String
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasks  Task[]
  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}
